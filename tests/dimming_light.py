TEST_CASE = [
    # Case 1
    "02 21 11 10 D6 00 00 00 0D 06 00 00 EB 00 00 00 ED", 
    "02 21 11 90 D6 00 00 00 0D 06 00 00 EB 00 FE 06 91", 
    "02 22 11 10 D7 00 00 00 0D 06 00 00 FA 00 00 00 10", 
    "02 22 11 90 D7 00 00 00 0D 06 00 00 FA 01 0E 00 85", 
    "02 23 11 10 D8 00 00 00 0D 06 00 00 F5 00 00 00 FF", 
    "02 23 11 90 D8 00 00 00 0D 06 00 00 F5 00 F0 00 8F", 
    "02 24 11 10 D9 00 00 00 0D 06 00 00 D2 00 00 00 D4", 
    "02 24 11 90 D9 00 00 00 0D 06 00 00 D2 00 EE 00 BE", 
    "02 25 11 10 DA FF 00 FC 0D 06 00 00 F0 00 00 00 13", 
    "02 25 11 90 DA FF 00 FC 0D 06 00 00 F0 01 27 00 B7", 
    "02 26 11 10 DB 00 00 00 0D 06 00 00 CD 00 00 00 C7", 
    "02 26 11 90 DB 00 00 00 0D 06 00 00 CD 01 16 00 52", 
    "02 12 11 01 DC 00 00 06 1C 1C 1A 1A 1A 1C 00 00 E5",
    "02 21 11 10 DD 00 00 00 0D 06 00 00 EB 00 00 00 22", 
    "02 21 11 90 DD 00 00 00 0D 06 00 00 EB 00 FE 06 5A", 
    "02 22 11 10 DE 00 00 00 0D 06 00 00 FA 00 00 00 F5", 
    "02 22 11 90 DE 00 00 00 0D 06 00 00 FA 01 0E 00 7C", 
    "02 23 11 10 DF 00 00 00 0D 06 00 00 F5 00 00 00 04", 
    "02 23 11 90 DF 00 00 00 0D 06 00 00 F5 00 F0 00 74", 
    "02 24 11 10 E0 00 00 00 0D 06 00 00 D2 00 00 00 19", 
    "02 24 11 90 E0 00 00 00 0D 06 00 00 D2 00 EE 00 7B", 
    "02 25 11 10 E1 FF 00 FC 0D 06 00 00 F0 00 00 00 38", 
    "02 25 11 90 E1 FF 00 FC 0D 06 00 00 F0 01 27 00 94", 
    "02 26 11 10 E2 00 00 00 0D 06 00 00 CD 00 00 00 12", 
    "02 26 11 90 E2 00 00 00 0D 06 00 00 CD 01 16 00 9B", 
    "02 12 11 01 E3 00 00 06 1C 1C 1A 1A 1A 1C 00 00 F2",
    "02 21 11 10 E4 00 00 00 0D 06 00 00 EB 00 00 00 3F", 
    "02 21 11 90 E4 00 00 00 0D 06 00 00 EB 00 FE 06 43", 
    "02 22 11 10 E5 00 00 00 0D 06 00 00 FA 00 00 00 42", 
    "02 22 11 90 E5 00 00 00 0D 06 00 00 FA 01 0E 00 B3", 
    "02 23 11 10 E6 00 00 00 0D 06 00 00 F5 00 00 00 29", 
    "02 23 11 90 E6 00 00 00 0D 06 00 00 F5 00 F0 00 59", 
    "02 24 11 10 E7 00 00 00 0D 06 00 00 D2 00 00 00 12", 
    "02 24 11 90 E7 00 00 00 0D 06 00 00 D2 00 EE 00 80", 
    "02 25 11 10 E8 FF 00 FC 0D 06 00 00 F0 00 00 00 2D", 
    "02 25 11 90 E8 FF 00 FC 0D 06 00 00 F0 01 27 00 8D", 
    "02 26 11 10 E9 00 00 00 0D 06 00 00 CD 00 00 00 15", 
    "02 26 11 90 E9 00 00 00 0D 06 00 00 CD 01 16 00 84", 
    "02 12 11 01 EA 00 00 06 1C 1C 1A 1A 1A 1C 00 00 EB",
    "02 21 11 10 EB 00 00 00 0D 06 00 00 EB 00 00 00 34", 
    "02 21 11 90 EB 00 00 00 0D 06 00 00 EB 00 FE 06 4C", 
    "02 22 11 10 EC 00 00 00 0D 06 00 00 FA 00 00 00 17", 
    "02 22 11 90 EC 00 00 00 0D 06 00 00 FA 01 0E 00 9A", 
    "02 23 11 10 ED 00 00 00 0D 06 00 00 F5 00 00 00 36", 
    "02 23 11 90 ED 00 00 00 0D 06 00 00 F5 00 F0 00 46", 
    "02 24 11 10 EE 00 00 00 0D 06 00 00 D2 00 00 00 07", 
    "02 24 11 90 EE 00 00 00 0D 06 00 00 D2 00 EE 00 6D", 
    "02 25 11 10 EF FF 00 FC 0D 06 00 00 F0 00 00 00 42", 
    "02 25 11 90 EF FF 00 FC 0D 06 00 00 F0 01 27 00 9A", 
    "02 26 11 10 F0 00 00 00 0D 06 00 00 CD 00 00 00 30", 
    "02 26 11 90 F0 00 00 00 0D 06 00 00 CD 01 16 00 BD", 
    "02 12 11 01 F1 00 00 06 1C 1C 1A 1A 1A 1C 00 00 00",

    # Case 2
    "02 61 06 11 2B 59"
    "02 61 23 91 2B 81 FF FF 11 FF FF FF 01 B4 FF 00 01 D4 0D 46 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 46"
    "02 62 06 11 2C 57" 
    "02 62 23 91 2C 81 FF FF 12 79 FF FF 01 56 FF 00 01 6A 0C 84 FF FF FF FF 05 00 FF FF FF FF FF FF FF FF A5"
    "02 61 06 11 2E 5E" 
    "02 61 23 91 2E 81 FF FF 11 FE FF FF 01 B5 FF 00 01 D4 0D 46 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 57"
    "02 62 06 11 2F 56" 
    "02 62 23 91 2F 81 FF FF 12 7A FF FF 01 56 FF 00 01 6A 0C 83 FF FF FF FF 04 FF FF FF FF FF FF FF FF FF BE"
    "02 61 06 11 31 43" 
    "02 61 23 91 31 81 FF FF 11 FF FF FF 01 B5 FF 00 01 D4 0D 47 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 54"
    "02 62 06 11 32 49" 
    "02 62 23 91 32 81 FF FF 12 7B FF FF 01 56 FF 00 01 6A 0C 84 FF FF FF FF 05 0A FF FF FF FF FF FF FF FF 6B"
    "02 61 06 11 34 48" 
    "02 61 23 91 34 81 FF FF 11 FF FF FF 01 B6 FF 00 01 D5 0D 47 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 57"
    "02 62 06 11 35 50" 
    "02 62 23 91 35 81 FF FF 12 79 FF FF 01 56 FF 00 01 6A 0C 83 FF FF FF FF 05 0C FF FF FF FF FF FF FF FF 6D"
    "02 61 06 11 37 45" 
    "02 61 23 91 37 81 FF FF 11 FE FF FF 01 B6 FF 00 01 D5 0D 47 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 4B"
    "02 62 06 11 38 43" 
    "02 62 23 91 38 81 FF FF 12 79 FF FF 01 56 FF 00 01 6A 0C 83 FF FF FF FF 05 0C FF FF FF FF FF FF FF FF 50"
    "02 61 06 11 3A 4A" 
    "02 61 23 91 3A 81 FF FF 11 FF FF FF 01 B6 FF 00 01 D5 0D 47 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 59"
    "02 62 06 11 3B 42" 
    "02 62 23 91 3B 81 FF FF 12 7B FF FF 01 57 FF 00 01 6B 0C 85 FF FF FF FF 05 0A FF FF FF FF FF FF FF FF 49"
    "02 61 06 11 3D 4F" 
    "02 61 23 91 3D 81 FF FF 11 FD FF FF 01 B7 FF 00 01 D5 0D 46 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 54"
    "02 62 06 11 3E 45" 
    "02 62 23 91 3E 81 FF FF 12 79 FF FF 01 57 FF 00 01 6B 0C 81 FF FF FF FF 05 07 FF FF FF FF FF FF FF FF 51"
    "02 61 06 11 40 34" 
    "02 61 23 91 40 81 FF FF 11 FF FF FF 01 B7 FF 00 01 D6 0D 48 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 54"
    "02 62 06 11 41 3C" 
    "02 62 23 91 41 81 FF FF 12 79 FF FF 01 57 FF 00 01 6B 0C 83 FF FF FF FF 05 07 FF FF FF FF FF FF FF FF 40"
    "02 61 06 11 43 31" 
    "02 61 23 91 43 81 FF FF 11 FF FF FF 01 B7 FF 00 01 D6 0D 47 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 26"
]

def checksum(buffer: bytes):
    checksum = 3
    for byte in buffer[:-1]:
        checksum ^= byte
        checksum = (checksum + 1) & 0xFF
    return checksum == buffer[-1]

def parse(buffer: bytes):
    room_id = None
    onoff_value = None
    consumption = None

    if buffer[1] & 0xF0 == 0x20 and buffer[3] == 0x90:
        room_id = buffer[1] & 0x0F
        onoff_value = True if buffer[5] == 0xFF else False
        consumption = int.from_bytes(buffer[13:15], byteorder='big')

    return (room_id, onoff_value, consumption)

for case in TEST_CASE:
    buffer = bytearray.fromhex(case)
    if checksum(buffer):
        parse_data = parse(buffer=buffer)
        if parse_data[0] is not None:
            print(parse_data)
    else:
        print("Checksum not matched!")
